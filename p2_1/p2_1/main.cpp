#include <iostream>
#include <string>
#include <fstream>
#include "hftree.h"

using namespace std;

void initialize();

void Encoding();

void Decoding();

void Printing();

void Tree();

int main()
{

    while(true){
    char switches = 'Q';

    cout<<" -----------------------------------------------------------------------     "<<endl;
    cout<<" |Welcome to use the huffman tree system, here is the instruction:     |     "<<endl;
    cout<<" |Legal operations:                                                    |     "<<endl;
    cout<<" |1. I: To initialize a huffman tree, there are two sub-operations:    |     "<<endl;
    cout<<" |   1.1. 1: The input is a string, which is simple and convenient.    |     "<<endl;
    cout<<" |   1.2. 2: The input is character-frequency pair.                    |     "<<endl;
    cout<<" |2. E: To encode some words based on the built tree.                  |     "<<endl;
    cout<<" |3. D: To decode a sequence of certain binary numbers into words.     |     "<<endl;
    cout<<" |4. P: To print the codes generated by step.2, 50 words per line.     |     "<<endl;
    cout<<" |5. T: To show the built tree hierachy, which is in Table form.       |     "<<endl;
    cout<<" |6. Q: To Quit the system.                                            |     "<<endl;
    cout<<" -----------------------------------------------------------------------     "<<endl;


    cin>>switches;
    cin.clear();
    cin.sync();

    switch(switches)
    {

    case ('I'):
        initialize();
        break;

    case ('E'):
        Encoding();
        break;

    case('D'):
        Decoding();
        break;

    case('P'):
        Printing();
        break;

    case('T'):
        Tree();
        break;

    case('Q'):
        cout<<"Thanks for using, hope you have a nice day. :)";
        return 0;

    default:
        cout<<"Fatal error: Wrong input! Please rear the instruction carefully!"<<endl;
        return 1;
    }
    cout<<endl<<"The step is done!"<<endl;
    }
    return 0;
}
